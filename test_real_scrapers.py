#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–∫—Ä–µ–π–ø–µ—Ä–æ–≤ NCAA D1 Basketball Predictor
"""

import asyncio
import sys
import os
from datetime import date

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.scrapers import (
    KenPomScraper,
    BartScraper, 
    MasseyScraper,
    HaslaScraper,
    TeamRankingsScraper
)

async def test_scraper(scraper_class, name):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Å–∫—Ä–µ–π–ø–µ—Ä–∞"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {name} —Å–∫—Ä–µ–π–ø–µ—Ä–∞...")
    print("=" * 50)
    
    try:
        scraper = scraper_class()
        async with scraper:
            games = await scraper.fetch_today()
            
            print(f"‚úÖ {name}: –ü–æ–ª—É—á–µ–Ω–æ {len(games)} –∏–≥—Ä")
            
            if games:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –∏–≥—Ä—É –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
                game = games[0]
                print(f"üìä –ü—Ä–∏–º–µ—Ä –∏–≥—Ä—ã:")
                print(f"   –ö–æ–º–∞–Ω–¥—ã: {game.away} @ {game.home}")
                print(f"   –í—Ä–µ–º—è: {game.tipoff_et}")
                print(f"   –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è: {game.neutral}")
                print(f"   –ú–µ—Ç—Ä–∏–∫–∏: {game.metrics}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º
                metrics_count = sum(1 for v in game.metrics.values() if v is not None)
                print(f"   –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫: {metrics_count}/7")
            else:
                print("‚ö†Ô∏è  –ò–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
    except Exception as e:
        print(f"‚ùå {name}: –û—à–∏–±–∫–∞ - {str(e)}")
        return False
    
    return True

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üèÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–∫—Ä–µ–π–ø–µ—Ä–æ–≤ NCAA D1 Basketball Predictor")
    print("=" * 70)
    
    scrapers = [
        (KenPomScraper, "KenPom"),
        (BartScraper, "BartTorvik"),
        (MasseyScraper, "Massey Ratings"),
        (HaslaScraper, "Haslametrics"),
        (TeamRankingsScraper, "TeamRankings")
    ]
    
    results = []
    
    for scraper_class, name in scrapers:
        success = await test_scraper(scraper_class, name)
        results.append((name, success))
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 70)
    
    working_count = 0
    for name, success in results:
        status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if success else "‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        print(f"{name:15} : {status}")
        if success:
            working_count += 1
    
    print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç: {working_count}/{len(results)} —Å–∫—Ä–µ–π–ø–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    if working_count == 0:
        print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∏ –æ–¥–∏–Ω —Ä–µ–∞–ª—å–Ω—ã–π —Å–∫—Ä–µ–π–ø–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("   –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ")
    elif working_count < len(results):
        print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¢–æ–ª—å–∫–æ {working_count} –∏–∑ {len(results)} —Å–∫—Ä–µ–π–ø–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ + –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ")
    else:
        print("\nüéâ –û–¢–õ–ò–ß–ù–û: –í—Å–µ —Å–∫—Ä–µ–π–ø–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   - –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é KenPom")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–Ω–µ—à–Ω–∏—Ö —Å–∞–π—Ç–æ–≤")
    print("   - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç fallback –Ω–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ")

if __name__ == "__main__":
    asyncio.run(main())
